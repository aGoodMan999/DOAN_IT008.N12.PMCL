1.Food
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;
    
    public partial class Food:BaseViewModel
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Food()
        {
            this.BillInfoes = new HashSet<BillInfo>();
        }

        private int _id;
        public int id { get { return _id; } set { _id = value;OnPropertyChanged(); } }

        private string _name;
        public string name { get { return _name; } set { _name = value; OnPropertyChanged(); } }

        private int _idCategory;
        public int idCategory { get { return _idCategory; } set { _idCategory = value; OnPropertyChanged(); } }

        private double _price;
        public double price { get { return _price; } set { _price = value; OnPropertyChanged(); } }

        private string _size;
        public string size { get { return _size; } set { _size = value; OnPropertyChanged(); } }

        private string _imageFood;
        public string imageFood { get { return _imageFood; } set { _imageFood = value; OnPropertyChanged(); } }

        private double _deleteFood;
        public double deleteFood { get { return _deleteFood; } set { _deleteFood = value; OnPropertyChanged(); } }

    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<BillInfo> _billInfoes;
        public virtual ICollection<BillInfo> BillInfoes { get { return _billInfoes; } set { _billInfoes = value; OnPropertyChanged(); } }
        private FoodCategory _FoodCategory;
        public virtual FoodCategory FoodCategory { get { return _FoodCategory; } set { _FoodCategory = value; OnPropertyChanged(); } }
    }
}

2.FoodCategory
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;

    public partial class FoodCategory:BaseViewModel
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public FoodCategory()
        {
            this.Foods = new HashSet<Food>();
        }

        private int _id;
        public int id { get { return _id; } set { _id = value; OnPropertyChanged(); } }

        private string _name;
        public string name { get { return _name; } set { _name = value; OnPropertyChanged(); } }

        private double _deleteFoodCategory;
        public double deleteFoodCategory { get { return _deleteFoodCategory; } set { _deleteFoodCategory = value; OnPropertyChanged(); } }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Food> _Foods;
        public virtual ICollection<Food> Foods { get { return _Foods; } set { _Foods = value; OnPropertyChanged(); } }
    }
    }

3.Them CategoryFood
AddFoodCategory = new RelayCommand<object>((p) =>
            {
                if (string.IsNullOrEmpty(NameFoodCategory))
                    return false;
                var displayList = DataProvider.Ins.DB.FoodCategories.Where(x => x.name == NameFoodCategory);
                if (displayList == null || displayList.Count() != 0)
                    return false;
                return true;
            }, (p) =>
            {
                var FoodCategory = new FoodCategory() { name = NameFoodCategory,};
                DataProvider.Ins.DB.FoodCategories.Add(FoodCategory);               
                DataProvider.Ins.DB.SaveChanges();
                ListFoodCategory = new ObservableCollection<FoodCategory>(DataProvider.Ins.DB.FoodCategories);

            });
4. Xoa CategoryFood
DeleteFoodCategory = new RelayCommand<object>((p) =>
            {
                if (string.IsNullOrEmpty(NameFoodCategory))
                    return false;
                var displayList = DataProvider.Ins.DB.FoodCategories.Where(x => x.name == NameFoodCategory );
                var listFood = DataProvider.Ins.DB.Foods;
                var listFoodCategory = DataProvider.Ins.DB.FoodCategories;
                foreach (FoodCategory item in displayList)
                {
                    foreach(Food food in listFood)
                    {
                        if(food.idCategory==item.id)
                            return false;
                        
                    }
                  
                }
                foreach (FoodCategory item in listFoodCategory)
                {
                    if (item.name == NameFoodCategory)
                        return true;
                }

                return  false;
            }, (p) =>
            {
                DialogResult mess = MessageBox.Show("Bạn có chắc là muốn xóa không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (mess == DialogResult.Yes)
                {
                    var foodCaterogy = DataProvider.Ins.DB.FoodCategories.Where(x => x.name == NameFoodCategory).SingleOrDefault();
                    foodCaterogy.deleteFoodCategory = 1;
                    var FoodCategory = DataProvider.Ins.DB.FoodCategories;
                    foreach (FoodCategory item1 in FoodCategory)
                    {
                        if (item1.deleteFoodCategory == 1)
                            FoodCategory.Remove(item1);
                    }
                    DataProvider.Ins.DB.SaveChanges();
                    NameFoodCategory = "";
                    ListFoodCategory = new ObservableCollection<FoodCategory>(DataProvider.Ins.DB.FoodCategories);                    
                }
                else
                    return;


                
            });
5. text block them category o xaml 
                    <TextBox Text="{Binding NameFoodCategory, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" materialDesign:HintAssist.Hint="Loại" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="62,10,230,0" />
6, Image anh
                    <Image Source="{Binding imageFood,UpdateSourceTrigger=PropertyChanged}" Height="200" Width="250" Margin="27,155,206,15"/>

7. User
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;
    
    public partial class User:BaseViewModel
    {
        private string _USERNAME;
        public string USERNAME { get { return _USERNAME; } set { _USERNAME = value; OnPropertyChanged(); } }

        private string _PASSWORD;
        public string PASSWORD { get { return _PASSWORD; } set { _PASSWORD = value; OnPropertyChanged(); } }

        private int _TYPE;
        public int TYPE { get { return _TYPE; } set { _TYPE = value; OnPropertyChanged(); } }

        private string _HOTEN;
        public string HOTEN { get { return _HOTEN; } set { _HOTEN = value; OnPropertyChanged(); } }

        private string _GIOITINH;
        public string GIOITINH { get { return _GIOITINH; } set { _GIOITINH = value; OnPropertyChanged(); } }

        private System.DateTime _NGAYSINH { get; set; }
        public System.DateTime NGAYSINH { get { return _NGAYSINH; } set { _NGAYSINH = value; OnPropertyChanged(); } }

        private string _SDT;
        public string SDT { get { return _SDT; } set { _SDT = value; OnPropertyChanged(); } }

        private string _EMAIL;
        public string EMAIL { get { return _EMAIL; } set { _EMAIL = value; OnPropertyChanged(); } }

        private string _DIACHI;
        public string DIACHI { get { return _DIACHI; } set { _DIACHI = value; OnPropertyChanged(); } }

        private string _IMAGEUSER;
        public string IMAGEUSER { get { return _IMAGEUSER; } set { _IMAGEUSER = value; OnPropertyChanged(); } }

        private int _DANGNHAP;
        public int DANGNHAP { get { return _DANGNHAP; } set { _DANGNHAP = value; OnPropertyChanged(); } }

    }
}
8. Bill
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;
    
    public partial class Bill:BaseViewModel
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Bill()
        {
            this.BillInfoes = new HashSet<BillInfo>();
        }

        private int _id;
        public int id { get => _id; set { _id = value; OnPropertyChanged(); } }

        private System.DateTime _DateCheckIn;
        public System.DateTime DateCheckIn { get => _DateCheckIn; set { _DateCheckIn = value; OnPropertyChanged(); } }

        private Nullable<System.DateTime> _DateCheckOut;
        public Nullable<System.DateTime> DateCheckOut { get => _DateCheckOut; set { _DateCheckOut = value; OnPropertyChanged(); } }

        private Nullable<int> _idTable;
        public Nullable<int> idTable { get => _idTable; set { _idTable = value; OnPropertyChanged(); } }

        private int _status;
        public int status { get => _status; set { _status = value; OnPropertyChanged(); } }

        private double _Total;
        public double Total { get => _Total; set { _Total = value; OnPropertyChanged(); } }


        private  TableFood _TableFood;
        public virtual TableFood TableFood { get => _TableFood; set { _TableFood = value; OnPropertyChanged(); } }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]

        private  ICollection<BillInfo> _BillInfoes;
        public virtual ICollection<BillInfo> BillInfoes { get => _BillInfoes; set { _BillInfoes = value; OnPropertyChanged(); } }

    }
}
9.BillInfo
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;
    
    public partial class BillInfo:BaseViewModel
    {
        private int _id;
        public int id { get => _id; set { _id = value; OnPropertyChanged(); } }

        private int _idBill;
        public int idBill { get => _idBill; set { _idBill = value; OnPropertyChanged(); } }

        private int _idFood;
        public int idFood { get => _idFood; set { _idFood = value; OnPropertyChanged(); } }

        private int _count;
        public int count { get => _count; set { _count = value; OnPropertyChanged(); } }

        private int _deleteBillInfo;
        public int deleteBillInfo { get => _deleteBillInfo; set { _deleteBillInfo = value; OnPropertyChanged(); } }

        private  Bill _Bill;
        public virtual Bill Bill { get => _Bill; set { _Bill = value; OnPropertyChanged(); } }

        private Food _Food;
        public virtual Food Food { get => _Food; set { _Food = value; OnPropertyChanged(); } }

    }
}
10.Table Food
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLICAPHE.Model
{
    using QUANLICAPHE.ViewModel;
    using System;
    using System.Collections.Generic;
    using System.Windows;

    public partial class TableFood:BaseViewModel
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public TableFood()
        {
            this.Bills = new HashSet<Bill>();
        }

        private int _id;
        public int id { get => _id; set { _id = value; OnPropertyChanged(); } }

        private string _status;
        public string status { get => _status; set { _status = value; OnPropertyChanged(); } }

        private string _name;
        public string name { get { return _name; } set { _name = value; OnPropertyChanged(); } }

    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]

        private  ICollection<Bill> _Bills;
        public virtual ICollection<Bill> Bills { get { return _Bills; } set { _Bills = value; OnPropertyChanged(); } }

    }
}
